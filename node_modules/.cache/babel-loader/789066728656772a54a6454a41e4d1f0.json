{"remainingRequest":"/home/raskolnikov/Vue_training/vue1-tut/vue3/node_modules/babel-loader/lib/index.js!/home/raskolnikov/Vue_training/vue1-tut/vue3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raskolnikov/Vue_training/vue1-tut/vue3/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/raskolnikov/Vue_training/vue1-tut/vue3/src/pages/Tensorflow.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/raskolnikov/Vue_training/vue1-tut/vue3/src/pages/Tensorflow.vue","mtime":1610155804988},{"path":"/home/raskolnikov/Vue_training/vue1-tut/vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raskolnikov/Vue_training/vue1-tut/vue3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/raskolnikov/Vue_training/vue1-tut/vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raskolnikov/Vue_training/vue1-tut/vue3/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcmFza29sbmlrb3YvVnVlX3RyYWluaW5nL3Z1ZTEtdHV0L3Z1ZTMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgeyByZWYgfSBmcm9tICd2dWUnOwoKcmVxdWlyZSgnQHRlbnNvcmZsb3cvdGZqcy1iYWNrZW5kLWNwdScpOwoKcmVxdWlyZSgnQHRlbnNvcmZsb3cvdGZqcy1iYWNrZW5kLXdlYmdsJyk7Cgp2YXIgY29jb1NzZCA9IHJlcXVpcmUoJ0B0ZW5zb3JmbG93LW1vZGVscy9jb2NvLXNzZCcpOwoKZXhwb3J0IGRlZmF1bHQgewogIHNldHVwOiBmdW5jdGlvbiBzZXR1cCgpIHsKICAgIHZhciBpbWdSZWYgPSByZWYoJycpOwogICAgdmFyIHZpZGVvUmVmID0gcmVmKCcnKTsKICAgIHZhciBpc0xvYWRpbmcgPSByZWYoZmFsc2UpOwogICAgdmFyIGlzU3RyZWFtaW5nID0gcmVmKGZhbHNlKTsKICAgIHZhciByZXN1bHQgPSByZWYoW10pOwoKICAgIGZ1bmN0aW9uIGRldGVjdCgpIHsKICAgICAgcmV0dXJuIF9kZXRlY3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBfZGV0ZWN0KCkgewogICAgICBfZGV0ZWN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBpbWcsIG1vZGVsLCBwcmVkaWN0aW9uczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpbWcgPSBpbWdSZWYudmFsdWU7CiAgICAgICAgICAgICAgICBpc0xvYWRpbmcudmFsdWUgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gY29jb1NzZC5sb2FkKCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIG1vZGVsID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIG1vZGVsLmRldGVjdChpbWcpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBwcmVkaWN0aW9ucyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXN1bHQudmFsdWUgPSBwcmVkaWN0aW9uczsKICAgICAgICAgICAgICAgIGlzTG9hZGluZy52YWx1ZSA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKICAgICAgcmV0dXJuIF9kZXRlY3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBvcGVuQ2FtZXJhKCkgewogICAgICByZXR1cm4gX29wZW5DYW1lcmEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBfb3BlbkNhbWVyYSgpIHsKICAgICAgX29wZW5DYW1lcmEgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBkZXZpY2VzLCBjYW1zLCBjYW1JZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCFuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmVudW1lcmF0ZURldmljZXMoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgZGV2aWNlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY2FtcyA9IGRldmljZXMuZmlsdGVyKGZ1bmN0aW9uIChkZXZpY2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGRldmljZS5raW5kID09PSAndmlkZW9pbnB1dCc7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNhbUlkID0gY2Ftc1swXS5kZXZpY2VJZDsKICAgICAgICAgICAgICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsKICAgICAgICAgICAgICAgICAgdmlkZW86IHsKICAgICAgICAgICAgICAgICAgICBkZXZpY2VJZDogewogICAgICAgICAgICAgICAgICAgICAgZXhhY3Q6IGNhbUlkCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChzdHJlYW0pIHsKICAgICAgICAgICAgICAgICAgaXNTdHJlYW1pbmcudmFsdWUgPSB0cnVlOwogICAgICAgICAgICAgICAgICB2aWRlb1JlZi52YWx1ZS5zcmNPYmplY3QgPSBzdHJlYW07CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwogICAgICByZXR1cm4gX29wZW5DYW1lcmEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzdG9wU3RyZWFtaW5nKCkgewogICAgICB2YXIgc3RyZWFtID0gdmlkZW9SZWYudmFsdWUuc3JjT2JqZWN0OwogICAgICB2YXIgdHJhY2tzID0gc3RyZWFtLmdldFRyYWNrcygpOwogICAgICB0cmFja3MubWFwKGZ1bmN0aW9uICh0cmFjaykgewogICAgICAgIHJldHVybiB0cmFjay5zdG9wKCk7CiAgICAgIH0pOwogICAgfQoKICAgIGZ1bmN0aW9uIHNuYXBzaG90KCkgewogICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7CiAgICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgiMmQiKTsKICAgICAgY3R4LmRyYXdJbWFnZSh2aWRlb1JlZi52YWx1ZSwgMCwgMCwgMjAwLCAyMDApOwogICAgICB2YXIgZGF0YSA9IGNhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL3BuZycpOwogICAgICBpbWdSZWYudmFsdWUuc2V0QXR0cmlidXRlKCdzcmMnLCBkYXRhKTsKICAgIH0KCiAgICByZXR1cm4gewogICAgICBpbWdSZWY6IGltZ1JlZiwKICAgICAgcmVzdWx0OiByZXN1bHQsCiAgICAgIGRldGVjdDogZGV0ZWN0LAogICAgICBpc0xvYWRpbmc6IGlzTG9hZGluZywKICAgICAgb3BlbkNhbWVyYTogb3BlbkNhbWVyYSwKICAgICAgdmlkZW9SZWY6IHZpZGVvUmVmLAogICAgICBpc1N0cmVhbWluZzogaXNTdHJlYW1pbmcsCiAgICAgIHN0b3BTdHJlYW1pbmc6IHN0b3BTdHJlYW1pbmcsCiAgICAgIHNuYXBzaG90OiBzbmFwc2hvdAogICAgfTsKICB9Cn07"},{"version":3,"sources":["/home/raskolnikov/Vue_training/vue1-tut/vue3/src/pages/Tensorflow.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section class=\"flex w-full\">\n    <div class=\"m-auto\">\n      <div class=\"mt-10\">\n        <h1 class=\"text-2xl my-4\">Tensorflow Object Detection</h1>\n          <div class=\"flex flex-wrap justify-center my-2\">\n            <div class=\"w-full flex justify-center\">\n              <button\n                v-if=\"!isStreaming\"\n                @click=\"openCamera\"\n                class=\"w-32 rounded shadow-md bg-gradient-to-r\n                    from-blue-800 to-indigo-800 text-white px-2 py-1\"\n              >\n                Open Camera\n              </button>\n              <div v-else class=\"flex justify-between\">\n                <button\n                  @click=\"stopStreaming\"\n                  class=\"w-32 rounded shadow-md bg-gradient-to-r\n                      from-blue-800 to-indigo-800 text-white px-2 py-1\"\n                >\n                  Stop Streaming\n                </button>\n                <button\n                  @click=\"snapshot\"\n                  class=\"w-32 rounded shadow-md bg-gradient-to-r\n                      from-blue-800 to-indigo-800 text-white px-2 py-1\"\n                >\n                  Snapshot\n                </button>\n              </div>\n            </div>\n            <video ref=\"videoRef\" autoplay=\"true\" width=\"100\" />\n          </div>\n          <div class=\"flex flex-wrap justify-center\">\n            <img\n              ref=\"imgRef\"\n              src=\"https://images.unsplash.com/photo-1567581935884-3349723552ca?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8bW9iaWxlfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"\n              width=\"200\"\n              crossorigin=\"anonymous\"\n            />\n            <div class=\"w-full text-center my-4\">\n              <button\n                @click=\"detect\"\n                class=\"w-32 rounded shadow-md bg-gradient-to-r\n                      from-red-800 to-pink-800 text-white p-2\">\n                <span v-if=\"isLoading\">Loading ...</span>\n                <span v-else>Detect Object</span>\n              </button>\n              <div v-if=\"result.length > 0\">\n                <p>{{ result[0].class }}</p>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { ref } from 'vue';\nrequire('@tensorflow/tfjs-backend-cpu');\nrequire('@tensorflow/tfjs-backend-webgl');\nconst cocoSsd = require('@tensorflow-models/coco-ssd');\nexport default {\n  setup() {\n    const imgRef = ref('');\n    const videoRef = ref('');\n    const isLoading = ref(false);\n    const isStreaming = ref(false);\n    const result = ref([]);\n\n\n    async function detect() {\n      const img = imgRef.value;\n      isLoading.value = true;\n      const model = await cocoSsd.load();\n      const predictions = await model.detect(img);\n      result.value = predictions;\n      isLoading.value = false;\n    }\n\n     async function openCamera() {\n      if(navigator.mediaDevices.getUserMedia) {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const cams = devices.filter(device => device.kind === 'videoinput');\n        const camId = cams[0].deviceId;\n        navigator.mediaDevices.getUserMedia({ video: { deviceId: { exact: camId } } })\n        .then(stream => {\n          isStreaming.value = true;\n          videoRef.value.srcObject = stream;\n        });\n      }\n    }\n\n    function stopStreaming() {\n      const stream = videoRef.value.srcObject;\n      const tracks = stream.getTracks();\n      tracks.map(track => track.stop());\n    }\n\n    function snapshot() {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(videoRef.value, 0, 0, 200, 200);\n      const data = canvas.toDataURL('image/png');\n      imgRef.value.setAttribute('src', data);\n    }\n\n    return {\n      imgRef,\n      result,\n      detect,\n      isLoading,\n      openCamera,\n      videoRef,\n      isStreaming,\n      stopStreaming,\n      snapshot\n    };\n  },\n};\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":""}]}